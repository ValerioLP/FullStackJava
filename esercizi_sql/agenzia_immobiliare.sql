CREATE DATABASE agenzia_immobiliare
    WITH 
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'Italian_Italy.1252'
    LC_CTYPE = 'Italian_Italy.1252'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;
    
CREATE TABLE IF NOT EXISTS public.immobile
(
    codice integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    tipo character varying(25) COLLATE pg_catalog."default" NOT NULL,
    superficie double precision NOT NULL,
    numero_vani smallint NOT NULL,
    anno_fabbricazione date NOT NULL,
    annessi character varying(25) COLLATE pg_catalog."default",
    CONSTRAINT immobile_pkey PRIMARY KEY (codice)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.immobile
    OWNER to postgres;
    
CREATE TABLE IF NOT EXISTS public.possedimento_immobili
(
    codice_proprietario integer NOT NULL,
    codice_immobile integer NOT NULL,
    prezzo_vendita money,
    CONSTRAINT immobili_in_vendita_pkey PRIMARY KEY (codice_proprietario, codice_immobile),
    CONSTRAINT unq_immobile UNIQUE (codice_immobile),
    CONSTRAINT fk_immobile FOREIGN KEY (codice_immobile)
        REFERENCES public.immobile (codice) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_proprietario FOREIGN KEY (codice_proprietario)
        REFERENCES public.proprietari (codice) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.possedimento_immobili
    OWNER to postgres;
    
CREATE TABLE IF NOT EXISTS public.proprietari
(
    codice integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nome character varying(25) COLLATE pg_catalog."default" NOT NULL,
    cognome character varying(25) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT proprietari_pkey PRIMARY KEY (codice)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.proprietari
    OWNER to postgres;

INSERT INTO public.immobile (codice, tipo, superficie, numero_vani, anno_fabbricazione, annessi) VALUES (1, 'Appartamento', 200.5, 5, '1975-10-01', NULL);
INSERT INTO public.immobile (codice, tipo, superficie, numero_vani, anno_fabbricazione, annessi) VALUES (2, 'Appartamento', 180.5, 5, '1984-01-01', NULL);
INSERT INTO public.immobile (codice, tipo, superficie, numero_vani, anno_fabbricazione, annessi) VALUES (3, 'Villa', 550.2, 8, '1990-01-01', 'giardino');
INSERT INTO public.immobile (codice, tipo, superficie, numero_vani, anno_fabbricazione, annessi) VALUES (4, 'Villa', 520.7, 8, '1992-01-01', 'garage');
INSERT INTO public.immobile (codice, tipo, superficie, numero_vani, anno_fabbricazione, annessi) VALUES (5, 'Villa', 480.7, 7, '1985-01-01', 'giardino');
INSERT INTO public.immobile (codice, tipo, superficie, numero_vani, anno_fabbricazione, annessi) VALUES (6, 'Appartamento', 120.7, 3, '1965-01-01', 'cantina');
INSERT INTO public.immobile (codice, tipo, superficie, numero_vani, anno_fabbricazione, annessi) VALUES (7, 'Appartamento', 114.2, 3, '1962-01-01', NULL);

INSERT INTO public.proprietari (codice, nome, cognome) VALUES (1, 'Franco', 'Junior');
INSERT INTO public.proprietari (codice, nome, cognome) VALUES (2, 'Beppe', 'Iaz');
INSERT INTO public.proprietari (codice, nome, cognome) VALUES (3, 'Gian', 'Luca');
INSERT INTO public.proprietari (codice, nome, cognome) VALUES (4, 'Ser', 'Gideon');
INSERT INTO public.proprietari (codice, nome, cognome) VALUES (5, 'God', 'Zilla');
INSERT INTO public.proprietari (codice, nome, cognome) VALUES (6, 'Sala', 'Mandra');

INSERT INTO public.possedimento_immobili (codice_proprietario, codice_immobile, prezzo_vendita) VALUES (1, 3, NULL);
INSERT INTO public.possedimento_immobili (codice_proprietario, codice_immobile, prezzo_vendita) VALUES (1, 2, '350.000,00 €');
INSERT INTO public.possedimento_immobili (codice_proprietario, codice_immobile, prezzo_vendita) VALUES (2, 4, '1.350.000,00 €');
INSERT INTO public.possedimento_immobili (codice_proprietario, codice_immobile, prezzo_vendita) VALUES (3, 6, NULL);
INSERT INTO public.possedimento_immobili (codice_proprietario, codice_immobile, prezzo_vendita) VALUES (4, 7, '380.000,00 €');
INSERT INTO public.possedimento_immobili (codice_proprietario, codice_immobile, prezzo_vendita) VALUES (5, 5, '1.180.000,00 €');

--creo la view dove lavorare
create view possedimenti as
select immobile.codice as immobile_codice, tipo, superficie, prezzo_vendita, 
numero_vani, anno_fabbricazione, annessi, proprietari.codice as proprietario_codice,
nome, cognome from immobile, proprietari, possedimento_immobili
where possedimento_immobili.codice_proprietario = proprietari.codice and
	  possedimento_immobili.codice_immobile = immobile.codice;

select * from possedimenti order by superficie desc;

--1.Vogliamo sapere quanti box sono presenti nel database
select count(*) as numero_box from immobile
	where annessi = 'garage';
	
--2.Vogliamo sapere quante ville hanno a disposizione un giardino.
select count(*) as ville_con_giardino from immobile
	where annessi = 'giardino' and tipo = 'Villa';
	
--3.Vogliamo sapere quanti mq di superficie dispone uno specificato 
--proprietario solo sugli immobili.	
select nome, sum(superficie) as mq_totali_posseduti from possedimenti
	where nome = 'Franco'
	group by nome;
	
--4.Elencare tutti i possessori di una villa.
select nome, cognome from possedimenti
	where tipo = 'Villa';
	
--5.Elencare tutti i possessori di un appartamento con Box.
select nome, cognome from possedimenti
	where tipo = 'Appartamento' and annessi = 'garage';
	
--6.Elencare tutti i possessori di immobili la cui data di 
--costruzione è successiva al 1996.
select nome, cognome from possedimenti
	where anno_fabbricazione > '1985-01-01';
	
--7.Produrre una vista dei proprietari di appartamenti con a fianco 
--il numero di vani complessivi disponibili.
create view appartamenti as
select proprietario_codice, nome, cognome, sum(numero_vani) as totale_vani
	from possedimenti where tipo = 'Appartamento'
	group by proprietario_codice, nome, cognome;
	
select * from appartamenti;

--8.Produrre una vista dei proprietari la cui somma dei mq degli 
--immobili posseduti sia superiore a 400 mq.
create view over_400mq as
select proprietario_codice, nome, cognome, sum(superficie) as somma_superficie
	from possedimenti
	group by proprietario_codice, nome, cognome
	having sum(superficie) > 400;
	
select * from over_400mq;
